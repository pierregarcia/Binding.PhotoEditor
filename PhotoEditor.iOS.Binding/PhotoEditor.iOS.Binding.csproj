<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>Xamarin.iOS10</TargetFramework>
		<IPhoneResourcePrefix>Resources</IPhoneResourcePrefix>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<OutputPath>bin/$(Configuration)/$(TargetFramework)/</OutputPath>
		<ServerAddress>MM12</ServerAddress>
		<ServerUser>Builder</ServerUser>
	</PropertyGroup>

	<ItemGroup>
		<Reference Include="System" />
		<Reference Include="Xamarin.iOS" />
	</ItemGroup>
	
	<ItemGroup>
		<NativeReference Include="PhotoEditorSDK.framework">
			<Kind>Framework</Kind>
			<Frameworks>Foundation CoreGraphics CoreMedia UIKit</Frameworks>
			<ForceLoad>True</ForceLoad>
			<LinkerFlags>-ObjC</LinkerFlags>
		</NativeReference>
	</ItemGroup>

	<ItemGroup>
	  <Compile Remove="ApiDefinitions.cs" />
	  <Compile Remove="StructsAndEnums.cs" />
	</ItemGroup>
	<ItemGroup>
	  <ObjcBindingApiDefinition Include="ApiDefinitions.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
	</ItemGroup>
	<ItemGroup>
	  <ObjcBindingCoreSource Include="StructsAndEnums.cs" Condition=" '$(EnableDefaultCompileItems)' == 'true' " />
	</ItemGroup>
	<Import Project="$(MSBuildExtensionsPath)\Xamarin\iOS\Xamarin.iOS.ObjCBinding.CSharp.targets" />

	<!-- Copied from C:\Program Files (x86)\Microsoft Visual Studio\Preview\Professional\MSBuild\15.0\Bin\Microsoft.Common.CurrentVersion.targets -->
	<!-- Modified to prevent NuGet to attempt to look for the native manifest -->
	<Target Name="BuiltProjectOutputGroup" Returns="@(BuiltProjectOutputGroupOutput)" DependsOnTargets="$(BuiltProjectOutputGroupDependsOn)">
		<ItemGroup>
			<_BuiltProjectOutputGroupOutputIntermediate Include="@(BuiltProjectOutputGroupKeyOutput)" />
		</ItemGroup>

		<!-- This item represents the app.config file -->
		<ItemGroup>
			<_BuiltProjectOutputGroupOutputIntermediate Include="$(AppConfig)" Condition="'$(AddAppConfigToBuildOutputs)'=='true'">
				<FinalOutputPath>$(TargetDir)$(TargetFileName).config</FinalOutputPath>
				<TargetPath>$(TargetFileName).config</TargetPath>
				<!-- For compatibility with 2.0 -->
				<OriginalItemSpec>$(AppConfig)</OriginalItemSpec>
			</_BuiltProjectOutputGroupOutputIntermediate>
		</ItemGroup>

		<ItemGroup>
			<_IsolatedComReference Include="@(COMReference)" Condition=" '%(COMReference.Isolated)' == 'true' " />
			<_IsolatedComReference Include="@(COMFileReference)" Condition=" '%(COMFileReference.Isolated)' == 'true' " />
		</ItemGroup>

		<!-- This is the part that's causing issues, since the manifest is not generated but still looked for by NuGet pack -->
		<!-- This item represents the native manifest, example: WindowsApplication1.exe.manifest or Native.ClassLibrary1.manifest -->
		<!--<ItemGroup>
			<_BuiltProjectOutputGroupOutputIntermediate Include="$(OutDir)$(_DeploymentTargetApplicationManifestFileName)" Condition="'@(NativeReference)'!='' or '@(_IsolatedComReference)'!=''">
				<TargetPath>$(_DeploymentTargetApplicationManifestFileName)</TargetPath>
				-->
		<!-- For compatibility with 2.0 -->
		<!--
				<OriginalItemSpec>$(OutDir)$(_DeploymentTargetApplicationManifestFileName)</OriginalItemSpec>
			</_BuiltProjectOutputGroupOutputIntermediate>
		</ItemGroup>-->

		<!-- Convert intermediate items into final items; this way we can get the full path for each item -->
		<ItemGroup>
			<BuiltProjectOutputGroupOutput Include="@(_BuiltProjectOutputGroupOutputIntermediate-&gt;'%(FullPath)')">
				<!-- For compatibility with 2.0 -->
				<OriginalItemSpec Condition="'%(_BuiltProjectOutputGroupOutputIntermediate.OriginalItemSpec)' == ''">%(_BuiltProjectOutputGroupOutputIntermediate.FullPath)</OriginalItemSpec>
			</BuiltProjectOutputGroupOutput>
		</ItemGroup>
	</Target>

</Project>
